{#
/**
 * @file
 * Default theme implementation to display a search block.
 */
#}
{%
set classes = [
'block',
'block-' ~ configuration.provider|clean_class
]
%}
<div{{ attributes.addClass(classes) }}>
  <div class="hidden">
  {% block content %}
    {{ content }}
  {% endblock %}
  </div>
  <form data-drupal-form-fields="edit-keys" action="{{ url('search.view_node_search') }}" method="get" class="search-block-form" accept-charset="UTF-8">
    <div class="form-item js-form-item form-type-search js-form-type-search form-item-keys js-form-item-keys form-no-label form-group">
      <label for="edit-keys" class="control-label sr-only">{{ "Recherche"|t }}</label>

      <div class="input-group">

        <span class="input-group-btn">
            <button data-drupal-selector="edit-submit" class="button js-form-submit form-submit btn-default btn-lg btn icon-only" type="submit"  value="Search" name="search">
              <span class="sr-only">{{ "Rechercher"|t }}</span>
              <span class="icon icon-search" aria-hidden="true" data-grunticon-embed></span>
            </button>
        </span>
        <input
            autocomplete="off"
            title=""
            data-drupal-selector="edit-keys"
            class="form-autocomplete form-search form-control ui-autocomplete-input input-lg"
            data-key="search_block"
            placeholder="{{ "Chercher un vol, un service..."|t }}"
            name="keys"
            value=""
            size="15"
            maxlength="128"
            type="search"
        >

        <span class="input-group-btn">
            <a href="#" class="btn-default btn-close">
              <span class="icon icon-close" data-grunticon-embed></span>
            </a>
        </span>
      </div>
    </div>
  </form>
</div>

{#
/**
 * @file
 * Default theme implementation to display a block.
 *
 * Available variables:
 * - $block->subject: Block title.
 * - $content: Block content.
 * - $block->module: Module that generated the block.
 * - $block->delta: An ID for the block, unique within each module.
 * - $block->region: The block region embedding the current block.
 * - $classes: String of classes that can be used to style contextually through
 *   CSS. It can be manipulated through the variable $classes_array from
 *   preprocess functions. The default values can be one or more of the
 *   following:
 *   - block: The current template type, i.e., "theming hook".
 *   - block-[module]: The module generating the block. For example, the user
 *     module is responsible for handling the default user navigation block. In
 *     that case the class would be 'block-user'.
 * - $title_prefix (array): An array containing additional output populated by
 *   modules, intended to be displayed in front of the main title tag that
 *   appears in the template.
 * - $title_suffix (array): An array containing additional output populated by
 *   modules, intended to be displayed after the main title tag that appears in
 *   the template.
 *
 * Helper variables:
 * - $classes_array: Array of html class attribute values. It is flattened
 *   into a string within the variable $classes.
 * - $block_zebra: Outputs 'odd' and 'even' dependent on each block region.
 * - $zebra: Same output as $block_zebra but independent of any block region.
 * - $block_id: Counter dependent on each block region.
 * - $id: Same output as $block_id but independent of any block region.
 * - $is_front: Flags true when presented in the front page.
 * - $logged_in: Flags true when the current user is a logged-in member.
 * - $is_admin: Flags true when the current user is an administrator.
 * - $block_html_id: A valid HTML ID and guaranteed unique.
 *
 * @ingroup templates
 *
 * @see bootstrap_preprocess_block()
 * @see template_preprocess()
 * @see template_preprocess_block()
 * @see bootstrap_process_block()
 * @see template_process()
 */
#}
{# {%
  set classes = [
    'block',
    'block-' ~ configuration.provider|clean_class,
    'block-' ~ plugin_id|clean_class,
    'clearfix',
  ]
%}
BLOCK SEARCH BLOCK STD
<section{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {% if label %}
    <h2{{ title_attributes.addClass('block-title') }}>{{ label }}</h2>
  {% endif %}
  {{ title_suffix }}

  {% block content %}
    {{ content }}
  {% endblock %}
</section> #}

