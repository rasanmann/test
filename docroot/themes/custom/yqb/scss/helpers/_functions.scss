/*-------------------------------------------------------------------
	Functions
-------------------------------------------------------------------*/

/*
	Acts like a php var_dump but with a SASS list or variable
*/
@function debug($list, $pre: false, $level: 1) {
    $tab: "    ";
    $indent: "";
    $break: if($pre, "\A ", "");
  
    @if length($list) == 0 {
        @return "( )";
    }
  
    @if length($list) == 1 {
        @return if($pre,  "(" + type-of($list) + ") ", "") + $list;
    }

    @for $i from 1 to $level {
        $indent: $indent + $tab;
    }

    $result: "[" + $break;

    @for $i from 1 through length($list) {
        $item: nth($list, $i);
        $result: $result + if($pre, $indent + $tab, " ");

        @if length($item) > 1 {
            $result: $result 
                + if($pre, "(list: " + length($item) + ") ", "") 
                + debug($item, $pre, $level + 1);
        }

        @else {
            @if $pre {
                $result: $result + "(" + type-of($item) + ") ";
            }
      
            @if length($item) == 0 {
                $result: $result + "( )";
            }
      
            @else if type-of($item) == string {
                $result: $result + quote($item);
            }
      
            @else if $item == null {
                $result: $result + "null";
            }
      
            @else {
                $result: $result + $item;
            }
        }
    
        @if $i != length($list) {
            $result: $result + "," + $break;
        }
    }

    $result: $result + $break + if($pre, if($level > 1, $indent, ""), " ") + "]";

    @return quote($result);
}

/*
	Calculate the resize ratio of the svg sprite based on the icon provided
	The icon needs at least 4 params (x, y, width, height)
	(optional) w or h based ratio
*/
@function svg-resize-ratio($icon){
	$ratio:null;
	$ratio_base:null;
	
	@if length($icon) == 4{
		$ratio_base:w;
	}@else{
		$ratio_base:nth($icon, 5);
	}
	
	@if $ratio_base == h{
		$ratio:nth($icon, 4) / $svg_grid_size;
	}@else{
		$ratio:nth($icon, 3) / $svg_grid_size;
	}
	
	@return $ratio;
}

/*
	Slice a SASS list like php array_slice
*/
@function sl-slice($list, $start: 1, $end: length($list)) {
	@if type-of($start) != "number" or type-of($end) != "number" {
		@warn "List indexes #{$start} and #{$end} must be numbers for `sl-slice`.";
		@return null;
	}
	
	@if $start > $end {
		@warn "Start index is #{$start} but has to be lesser than or equals to the end index (#{$end}) for `sl-slice`.";
		@return null;
	}
	
	@if $start < 1 or $end < 1 {
		@warn "List indexes must be non-zero integers for `sl-slice`.";
		@return null;
	}
	
	@if $start > length($list) {
		@warn "Start index is #{$start} but list is only #{length($list)} items long for `sl-slice`.";
		@return null;
	}
	
	@if $end > length($list) {
		@warn "End index is #{$end} but list is only #{length($list)} items long for `sl-slice`.";
		@return null;
	}
	
	$result: ();
	
	@for $i from $start through $end {
		$result: append($result, nth($list, $i), list-separator($list));
	}
	
	@return $result;
}