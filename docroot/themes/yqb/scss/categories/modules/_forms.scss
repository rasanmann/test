

// Feedback states
.has-success {
  .form-control {
    color:$state-success-text;
    background-color:$state-success-bg;
  }
}
.has-warning {
  .form-control {
    color:$state-warning-bg;
    background-color:$state-warning-text;
  }
}
.has-error {
  .form-control {
    color:$state-danger-bg;
    background-color:$state-danger-text;
  }
}


// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  font-size: 12px;
}

.form-inverse {
  label {
    color:$grey;
  }

  .form-control, .select-wrapper {
    border:0;
  }
}

.form-group{
  &.error{
    input {
      border: 1px solid $brand-danger; 
      color: $brand-danger; 
    }
  }
  
  &.with-margin{
    @include responsive(600px){
      margin-bottom:20px;
    }
  }
  
  .description{
    margin-top:5px;
  }
}

// Chrome "date" inputs
// To hide the arrow:
input::-webkit-calendar-picker-indicator{
  display: none;
}

//And to hide the prompt:
input[type="date"]::-webkit-input-placeholder{
  visibility: hidden !important;
}

label {
  margin-bottom: 5px !important;
  @include font-size(14);
  padding-left: 3px;
  line-height: 15px;
  color: $black;
  
  @include responsive($screen-xs){
    @include font-size(12);
  }

  @include transition((color));

  &.control-label-focus {
    color:$black;
  }
}

form{
  .row{
    @include make-row(20px);
  }
  @include make-grid-columns(20px);  
}


// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  @include box-sizing(border-box);
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}

.form-type-checkbox {
  margin-top:25px;
  margin-bottom:15px;
  
  label {
    font-weight: bold;
    padding-left: 30px;
    @include font-size(14);

    @include responsive($screen-xs) {
      @include font-size(12);
    }

    input[type="checkbox"] {
      margin-left: -30px;
      margin-top: 0;
    }
  }
}

input[type="file"] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  @include tab-focus;
}

// Adjust output element
output {
  display: block;
  padding-top: ($padding-base-vertical + 1);
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
}

.user-login-form,
.user-pass,
.user-form {
  max-width: 470px;
  input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
    color:$black !important;
    background-color: $white !important;
  }
}

.select-wrapper{
  position: relative;
  background: $white url("../img/arrow-select.png") no-repeat right;
  background-size: auto 82%;
  overflow: hidden;
  border: 2px solid $input-border;
   border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  @include responsive(1000px){
    background-size: auto 68%;
  }
  select{
    background-color: transparent;
    border: 0;
    width: 120%;
    @include responsive($screen-sm){
   //   width: 100%;
    }
   
  }
  .form-control{
    padding-right: calc(20% + 38px);
    @include responsive(1000px){
      padding-right: calc(20% + 31px);
    }
    @include responsive($screen-sm){
      
 //     padding-right: 30px !important;
    }
    &.input-sm {
      padding-right: calc(20% + 35px);
    }

    &.input-lg {
      padding-right: calc(20% + 75px);
    }
  }
}

// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control {
  display: block;
  width: 100%;
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical 12px $padding-base-vertical 22px;
  font-size: 18px;
  line-height: $line-height-base;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 2px solid $input-border;
  border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  box-shadow: none;
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);
  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus($input-border);

  // Placeholder
  @include placeholder;
  @include responsive(1250px){
    font-size: 16px;
    padding-left: 12px;
  }
  @include responsive(1000px){
    font-size: 14px;
  }
  @include responsive(1000px){
    font-size: 14px;
  }
  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }

  // [converter] extracted textarea& to textarea.form-control
}

// Reset height for `textarea`s
textarea.form-control {
  height: auto;
}


// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] {
  -webkit-appearance: none;
}


// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
//
// Note that as of 8.3, iOS doesn't support `datetime` or `week`.

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    &.form-control {
      -webkit-appearance: none;
      -moz-appearance: none;
      line-height: 60px;
      vertical-align: middle;
      width: 100%;
      padding-top:0;
      padding-bottom: 0;
      
    }

    &.input-sm,
    .input-group-sm & {
      line-height: $input-height-small;
    }

    &.input-lg,
    .input-group-lg & {
      line-height: $input-height-large;
    }
  }
}


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.




// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.


// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

@include input-size('.input-sm', $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $input-border-radius-small);



@include input-size('.input-lg', $input-height-large, $padding-large-vertical, $padding-large-horizontal, 21px, $line-height-large, $input-border-radius-large);

.form-group-lg {
  padding: 15px 0 6px;
  border-radius: $input-border-radius-large;
  background-color: $input-bg;
  label{
    margin-bottom: 0;
    padding: 0 $padding-large-horizontal;
  }
  .form-control {
    height: $input-height-small;
    padding: $padding-large-vertical $padding-large-horizontal;
    font-size: $font-size-large;
    line-height: $line-height-small;
    border-radius: $input-border-radius-large;
  }

}




// Inline forms


// [converter] extracted from `.form-inline` for libsass compatibility
@mixin form-inline {

  // Kick in the inline
  @media (min-width: $screen-sm-min) {
    .form-group {
      vertical-align: bottom;
    }

    // In navbar-form, allow folks to *not* use `.form-group`

    .form-control {
      display: block;

    }
  }
}
// [converter] extracted as `@mixin form-inline` for libsass compatibility
.form-inline {
  
  @include form-inline;

}




// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.form-horizontal {

  // Consistent vertical alignment of radios and checkboxes
  //
  // Labels also get some reset styles, but that is scoped to a media query below.
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: ($padding-base-vertical + 1); // Default padding plus a border
  }
  // Account for padding we're adding to ensure the alignment and of help text
  // and other content below items
  .radio,
  .checkbox {
    min-height: ($line-height-computed + ($padding-base-vertical + 1));
  }

  // Make form groups behave like rows
  .form-group {
    @include make-row;
  }

  // Reset spacing and right align labels, but scope to media queries so that
  // labels on narrow viewports stack the same as a default form example.
  @media (min-width: $screen-sm-min) {
    .control-label {
      text-align: right;
      margin-bottom: 0;
      padding-top: ($padding-base-vertical + 1); // Default padding plus a border
    }
  }

  // Validation states
  //
  // Reposition the icon because it's now within a grid column and columns have
  // `position: relative;` on them. Also accounts for the grid gutter padding.
  .has-feedback .form-control-feedback {
    right: floor(($grid-gutter-width / 2));
  }

  // Form group sizes
  //
  // Quick utility class for applying `.input-lg` and `.input-sm` styles to the
  // inputs and labels within a `.form-group`.
  .form-group-lg {
    @media (min-width: $screen-sm-min) {
      .control-label {
        padding-top: ($padding-large-vertical + 1);
        font-size: $font-size-large;
      }
    }
  }
  .form-group-sm {
    @media (min-width: $screen-sm-min) {
      .control-label {
        padding-top: ($padding-small-vertical + 1);
        font-size: $font-size-small;
      }
    }
  }
}


.form-group-sidebar{
  padding: 12px 24px 15px;
  margin-bottom: 0;
  
  border-bottom:1px solid $gray-light;
  .form-control{
    @include font-size(24);
    padding: 0 16px;
    height: 32px;
    font-weight: $bold;
  }
}

.form-group-collapse {
  margin-bottom:0;
}

#contact-message-candidature-spontanee-form{
  max-width: 600px;
}

.field--type-file{
  input{
    border:0;
    padding: 0;
    height: auto;
  }
  .file-link{
    margin-right: 5px;
  }
  .help-block{
    .icon{
      
      font-size: 14px;
      margin-right: 5px;
      top:-1px;
    }
  }
  .btn{
    @include button-size(0, 25px, $btn-font-size-small, $btn-line-height-small, $btn-border-radius-small);
  }
}