<?php
/**
 * @file
 * Enables the creation of webform predefined options.
 */

use Drupal\Core\Serialization\Yaml;
use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\Entity\WebformOptions;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\Core\StringTranslation\TranslatableMarkup;

define('WEBFORM_MAILCHIMP_ID_PREFIX', 'webform_mailchimp_groups_');

/**
 * Implements hook_install().
 */
function webform_mailchimp_install() {
  _webform_mailchimp_create_interest_groups_predefined_options();
}

/**
 * Implements hook_uninstall().
 */
function webform_mailchimp_uninstall() {
  _webform_mailchimp_delete_interest_groups_predefined_options();
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds a form button to fetch current groups from Mailchimp.
 */
function webform_mailchimp_form_webform_options_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['category']['#default_value'] === 'Mailchimp') {
    $form['#attached']['library'][] = 'webform_mailchimp/webform_mailchimp.groups_options';
    $form['options_mailchimp_groups_fetch']['submit'] = [
      '#type' => 'button',
      '#value' => t('Fetch Mailchimp Groups'),
      '#prefix' => '<div id="webform-mailchimp-fetch-submit" class="container-inline">',
      '#suffix' => '</div>',
      '#ajax' => array(
        'callback' => 'Drupal\webform_mailchimp\Plugin\Form\WebformMailchimpFormAlter::fetchGroupsAjaxCallback',
        'event' => 'click',
        'progress' => [
          'type' => 'throbber',
          'message' => t('Fetching groups...'),
        ],
      ),
    ];
  }
}

/*
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds a link leading to the Mailchimp groups import options form.
 */
function webform_mailchimp_form_webform_options_filter_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#attached']['library'][] = 'webform_mailchimp/webform_mailchimp.groups_options';
}

/**
 * Creates webform predefined options.
 */
function _webform_mailchimp_create_interest_groups_predefined_options($update_all=TRUE) {
  $lists = mailchimp_get_lists();
  $lists = !empty($lists) ? $lists : [];
  $predefined_options = WebformOptions::loadMultiple();
  $message_text = 'No Mailchimp Groups options were updated.';
  $updated_options = [];

  foreach ($lists as $list) {
    $list_id = !empty($list->id) ? $list->id : '';
    $list_name = !empty($list->name) ? $list->name : '';
    $list_groups = !empty($list->intgroups) ? $list->intgroups : [];

    foreach ($list_groups as $group) {
      $group_name = !empty($group->title) ? $group->title : '';
      $group_id = !empty($group->id) ? $group->id : '';
      $group_interests = !empty($group->interests) ? $group->interests : [];

      if (!empty($group_id) && !empty($group_name) && !empty($group_interests)) {
        $group_options = _webform_mailchimp_get_interest_options($group_interests);
        $prefix = WEBFORM_MAILCHIMP_ID_PREFIX;
        $id = "{$prefix}{$list_id}_{$group_id}";
        $options_exist = array_key_exists($id, $predefined_options);
        $options_name = "{$list_name}: {$group_name}";

        if ($update_all && $options_exist) {
          if (_webform_mailchimp_update_predefined_options($id, $group_options, $predefined_options[$id])) {
            array_push($updated_options, $options_name);
          }
        }
        else if (!$options_exist) {
          if (_webform_mailchimp_create_predefined_options($id, $options_name, $group_options)) {
            array_push($updated_options, $options_name);
          }
        }
      }
    }
  }
  if (!empty($updated_options)) {
    $message_text = 'Updated the following Mailchimp Groups options: ';

    foreach ($updated_options as $option) {
      $message_text .= '<br>' . $option;
    }
  }
  $message_text = \Drupal\Core\Render\Markup::create($message_text);
  $message = new TranslatableMarkup("<p>@message</p>", ['@message' => $message_text]);
  \Drupal::messenger()->addMessage($message);
}

/**
 * Removes webform predefined options.
 */
function _webform_mailchimp_delete_interest_groups_predefined_options() {
  $predefined_options = WebformOptions::loadMultiple();

  foreach ($predefined_options as $id => $options) {
    $length = strlen(WEBFORM_MAILCHIMP_ID_PREFIX);
    if (substr($id, 0, $length) === WEBFORM_MAILCHIMP_ID_PREFIX) {
      $webform_options = WebformOptions::load($id);
      try {
        $webform_options->delete();
      } catch (Exception $e) {
        $messenger = \Drupal::messenger();
        $messenger->addMessage(
          'Error deleting predefined interest groups options.',
          $messenger::TYPE_ERROR
        );
        \Drupal::logger('webform_mailchimp')
          ->error(
            'Encountered error while trying to delete predefined interest groups options: "{id}"',
            array(
              'id' => $id,
            )
        );
      }
    }
  }
}

/**
 * Get group options.
 * @param $group_interests
 *
 * @return array
 */
function _webform_mailchimp_get_interest_options($group_interests) {
  $options = [];
  foreach ($group_interests as $interest) {
    $interest_id = !empty($interest->id) ? $interest->id : '';
    $interest_name = !empty($interest->name) ? $interest->name : '';

    if (!empty($interest_id) && !empty($interest_name)) {
      $options[$interest_id] = $interest_name;
    }
  }
  return $options;
}

/**
 * Creates new predefined options.
 *
 * @param $id
 * @param $name
 * @param $options
 */
function _webform_mailchimp_create_predefined_options($id, $name, $options) {
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();

  try {
    $webform_options = WebformOptions::create([
      'langcode' => $language,
      'status' => TRUE,
      'id' => $id,
      'label' => $name,
      'category' => t('Mailchimp'),
      'options' => Yaml::encode($options),
    ]);
    $webform_options->save();
    return TRUE;
  }
  catch (EntityStorageException $e) {
    $err_msg = 'An error occurred creating predefined options. ';
    $err_msg .= 'See ' . __FUNCTION__ . '() <pre>' . $e->getTraceAsString() . '</pre>';
    \Drupal::logger('webform_mailchimp')
      ->error($err_msg);
    return FALSE;
  }
}

/**
 * Updates predefined options.
 *
 * @param $id
 * @param $options
 * @param string $webform_options
 */
function _webform_mailchimp_update_predefined_options($id, $options, $webform_options = '') {

  try {
    if (empty($webform_options)) {
      $webform_options = WebformOptions::load($id);
    }

    if (!empty($webform_options)) {
      $webform_options->setOptions($options);
      $webform_options->save();
    }
    return TRUE;
  }
  catch (EntityStorageException $e) {
    $err_msg = 'An error occurred updating predefined options. ';
    $err_msg .= 'See ' . __FUNCTION__ . '() <pre>' . $e->getTraceAsString() . '</pre>';
    \Drupal::logger(
      'webform_mailchimp')
      ->error($err_msg);
    return FALSE;
  }
}
